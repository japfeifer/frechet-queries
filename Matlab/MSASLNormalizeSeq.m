
function seq = MSASLNormalizeSeq(seq,seqNormalCurr)

    HEAD = [1,2,3];         NECK = [4,5,6];         RSHO = [7,8,9];        RELB = [10,11,12];
    RWST = [13,14,15];      LSHO = [16,17,18];      LELB = [19,20,21];     LWST = [22,23,24];
    RHIP = [25,26,27];      RKNE = [28,29,30];      RFOT = [31,32,33];     LHIP = [34,35,36];
    LKNE = [37,38,39];      LFOT = [40,41,42];      REYE = [43,44,45];     LEYE = [46,47,48];
    REAR = [49,50,51];      LEAR = [52,53,54]; 

    LTPR = [61,62,63];      LTDI = [64,65,66];      LTEF = [67,68,69];                            % thumb
    LIPR = [70,71,72];      LIME = [73,74,75];      LIDI = [76,77,78];     LIEF = [79,80,81];     % index finger
    LMPR = [82,83,84];      LMME = [85,86,87];      LMDI = [88,89,90];     LMEF = [91,92,93];     % middle finger
    LRPR = [94,95,96];      LRME = [97,98,99];      LRDI = [100,101,102];  LREF = [103,104,105];  % ring finger
    LPPR = [106,107,108];   LPME = [109,110,111];   LPDI = [112,113,114];  LPEF = [115,116,117];  % pinky finger
    LPAL = [55,56,57];      LTPA = [58,59,60];                                                    % palm and thumb palm

    RTPR = [124,125,126];   RTDI = [127,128,129];   RTEF = [130,131,132];                         % thumb
    RIPR = [133,134,135];   RIME = [136,137,138];   RIDI = [139,140,141];  RIEF = [142,143,144];  % index finger
    RMPR = [145,146,147];   RMME = [148,149,150];   RMDI = [151,152,153];  RMEF = [154,155,156];  % middle finger
    RRPR = [157,158,159];   RRME = [160,161,162];   RRDI = [163,164,165];  RREF = [166,167,168];  % ring finger
    RPPR = [169,170,171];   RPME = [172,173,174];   RPDI = [175,176,177];  RPEF = [178,179,180];  % pinky finger
    RPAL = [118,119,120];   RTPA = [121,122,123];                                                 % palm and thumb palm

    if seqNormalCurr(1,1) == 1
        % (1) for each frame, translate all joints so that NECK first frame
        % is at coordinate (0,0,0)
        transPoint = [seq(1,NECK(1))*-1 seq(1,NECK(2))*-1 seq(1,NECK(3))*-1];
        seq = [seq(:,HEAD)+transPoint seq(:,NECK)+transPoint seq(:,RSHO)+transPoint seq(:,RELB)+transPoint ...
                   seq(:,RWST)+transPoint seq(:,LSHO)+transPoint seq(:,LELB)+transPoint seq(:,LWST)+transPoint ...
                   seq(:,RHIP)+transPoint seq(:,RKNE)+transPoint seq(:,RFOT)+transPoint seq(:,LHIP)+transPoint ...
                   seq(:,LKNE)+transPoint seq(:,LFOT)+transPoint seq(:,REYE)+transPoint seq(:,LEYE)+transPoint ...
                   seq(:,REAR)+transPoint seq(:,LEAR)+transPoint seq(:,LPAL)+transPoint seq(:,LTPA)+transPoint ...
                   seq(:,LTPR)+transPoint seq(:,LTDI)+transPoint seq(:,LTEF)+transPoint seq(:,LIPR)+transPoint ...
                   seq(:,LIME)+transPoint seq(:,LIDI)+transPoint seq(:,LIEF)+transPoint seq(:,LMPR)+transPoint ...
                   seq(:,LMME)+transPoint seq(:,LMDI)+transPoint seq(:,LMEF)+transPoint seq(:,LRPR)+transPoint ...
                   seq(:,LRME)+transPoint seq(:,LRDI)+transPoint seq(:,LREF)+transPoint seq(:,LPPR)+transPoint ...
                   seq(:,LPME)+transPoint seq(:,LPDI)+transPoint seq(:,LPEF)+transPoint seq(:,RPAL)+transPoint ...
                   seq(:,RTPA)+transPoint seq(:,RTPR)+transPoint seq(:,RTDI)+transPoint seq(:,RTEF)+transPoint ...
                   seq(:,RIPR)+transPoint seq(:,RIME)+transPoint seq(:,RIDI)+transPoint seq(:,RIEF)+transPoint ...
                   seq(:,RMPR)+transPoint seq(:,RMME)+transPoint seq(:,RMDI)+transPoint seq(:,RMEF)+transPoint ...
                   seq(:,RRPR)+transPoint seq(:,RRME)+transPoint seq(:,RRDI)+transPoint seq(:,RREF)+transPoint ...
                   seq(:,RPPR)+transPoint seq(:,RPME)+transPoint seq(:,RPDI)+transPoint seq(:,RPEF)+transPoint];
    end

    if seqNormalCurr(1,2) == 1
        % (2) for each frame, translate all joints so that NECK is always
        % fixed to coordinate (0,0,0)
        transPoint = [seq(:,NECK(1))*-1 seq(:,NECK(2))*-1 seq(:,NECK(3))*-1];
        seq = [seq(:,HEAD)+transPoint seq(:,NECK)+transPoint seq(:,RSHO)+transPoint seq(:,RELB)+transPoint ...
                   seq(:,RWST)+transPoint seq(:,LSHO)+transPoint seq(:,LELB)+transPoint seq(:,LWST)+transPoint ...
                   seq(:,RHIP)+transPoint seq(:,RKNE)+transPoint seq(:,RFOT)+transPoint seq(:,LHIP)+transPoint ...
                   seq(:,LKNE)+transPoint seq(:,LFOT)+transPoint seq(:,REYE)+transPoint seq(:,LEYE)+transPoint ...
                   seq(:,REAR)+transPoint seq(:,LEAR)+transPoint seq(:,LPAL)+transPoint seq(:,LTPA)+transPoint ...
                   seq(:,LTPR)+transPoint seq(:,LTDI)+transPoint seq(:,LTEF)+transPoint seq(:,LIPR)+transPoint ...
                   seq(:,LIME)+transPoint seq(:,LIDI)+transPoint seq(:,LIEF)+transPoint seq(:,LMPR)+transPoint ...
                   seq(:,LMME)+transPoint seq(:,LMDI)+transPoint seq(:,LMEF)+transPoint seq(:,LRPR)+transPoint ...
                   seq(:,LRME)+transPoint seq(:,LRDI)+transPoint seq(:,LREF)+transPoint seq(:,LPPR)+transPoint ...
                   seq(:,LPME)+transPoint seq(:,LPDI)+transPoint seq(:,LPEF)+transPoint seq(:,RPAL)+transPoint ...
                   seq(:,RTPA)+transPoint seq(:,RTPR)+transPoint seq(:,RTDI)+transPoint seq(:,RTEF)+transPoint ...
                   seq(:,RIPR)+transPoint seq(:,RIME)+transPoint seq(:,RIDI)+transPoint seq(:,RIEF)+transPoint ...
                   seq(:,RMPR)+transPoint seq(:,RMME)+transPoint seq(:,RMDI)+transPoint seq(:,RMEF)+transPoint ...
                   seq(:,RRPR)+transPoint seq(:,RRME)+transPoint seq(:,RRDI)+transPoint seq(:,RREF)+transPoint ...
                   seq(:,RPPR)+transPoint seq(:,RPME)+transPoint seq(:,RPDI)+transPoint seq(:,RPEF)+transPoint];
    end
    
    if seqNormalCurr(1,3) == 1  % normalize upper body joints to [0,1], and set lower body joints to origin
        z = [];
        z(size(seq,1)) = 0; % origin for lower body joints
        
        xval = [seq(:,1)'   seq(:,4)'   seq(:,7)'   seq(:,10)'   seq(:,13)'  seq(:,16)'  seq(:,19)'  seq(:,22)' ...
                z           z           z           z            z           z           seq(:,43)'  seq(:,46)' ...
                seq(:,49)'  seq(:,52)'  seq(:,55)'  seq(:,58)'   seq(:,61)'  seq(:,64)'  seq(:,67)'  seq(:,70)' ...
                seq(:,73)'  seq(:,76)'  seq(:,79)'  seq(:,82)'   seq(:,85)'  seq(:,88)'  seq(:,91)'  seq(:,94)' ...
                seq(:,97)'  seq(:,100)' seq(:,103)' seq(:,106)'  seq(:,109)' seq(:,112)' seq(:,115)' seq(:,118)' ...
                seq(:,121)' seq(:,124)' seq(:,127)' seq(:,130)'  seq(:,133)' seq(:,136)' seq(:,139)' seq(:,142)' ...
                seq(:,145)' seq(:,148)' seq(:,151)' seq(:,154)'  seq(:,157)' seq(:,160)' seq(:,163)' seq(:,166)' ...
                seq(:,169)' seq(:,172)' seq(:,175)' seq(:,178)'];
        yval = [seq(:,1+1)'   seq(:,4+1)'   seq(:,7+1)'   seq(:,10+1)'   seq(:,13+1)'  seq(:,16+1)'  seq(:,19+1)'  seq(:,22+1)' ...
                z           z           z           z            z           z           seq(:,43+1)'  seq(:,46+1)' ...
                seq(:,49+1)'  seq(:,52+1)'  seq(:,55+1)'  seq(:,58+1)'   seq(:,61+1)'  seq(:,64+1)'  seq(:,67+1)'  seq(:,70+1)' ...
                seq(:,73+1)'  seq(:,76+1)'  seq(:,79+1)'  seq(:,82+1)'   seq(:,85+1)'  seq(:,88+1)'  seq(:,91+1)'  seq(:,94+1)' ...
                seq(:,97+1)'  seq(:,100+1)' seq(:,103+1)' seq(:,106+1)'  seq(:,109+1)' seq(:,112+1)' seq(:,115+1)' seq(:,118+1)' ...
                seq(:,121+1)' seq(:,124+1)' seq(:,127+1)' seq(:,130+1)'  seq(:,133+1)' seq(:,136+1)' seq(:,139+1)' seq(:,142+1)' ...
                seq(:,145+1)' seq(:,148+1)' seq(:,151+1)' seq(:,154+1)'  seq(:,157+1)' seq(:,160+1)' seq(:,163+1)' seq(:,166+1)' ...
                seq(:,169+1)' seq(:,172+1)' seq(:,175+1)' seq(:,178+1)'];
        minxval = min(xval);
        maxxval = max(xval);
        minyval = min(yval);
        maxyval = max(yval);

        normSeq = seq;

        % x axis
        colsProcess = [1 4 7 10 13 16 19 22 25 28 31 34 37 40 43 46 49 52 55 58 61 ...
                       64 67 70 73 76 79 82 85 88 91 94 97 100 103 106 109 112 115 ...
                       118 121 124 127 130 133 136 139 142 145 148 151 154 157 160 ...
                       163 166 169 172 175 178];
        for j = 1:size(colsProcess,2)
            normSeq(:,colsProcess(j)) = ((normSeq(:,colsProcess(j)) - minxval) / (maxxval - minxval));
        end

        % y axis
        colsProcess = [1+1 4+1 7+1 10+1 13+1 16+1 19+1 22+1 25+1 28+1 31+1 34+1 37+1 40+1 43+1 46+1 49+1 52+1 55+1 58+1 61+1 ...
                       64+1 67+1 70+1 73+1 76+1 79+1 82+1 85+1 88+1 91+1 94+1 97+1 100+1 103+1 106+1 109+1 112+1 115+1 ...
                       118+1 121+1 124+1 127+1 130+1 133+1 136+1 139+1 142+1 145+1 148+1 151+1 154+1 157+1 160+1 ...
                       163+1 166+1 169+1 172+1 175+1 178+1];
        for j = 1:size(colsProcess,2)
            normSeq(:,colsProcess(j)) = ((normSeq(:,colsProcess(j)) - minyval) / (maxyval - minyval));
        end

        % x axis
        colsProcess = [25 28 31 34 37 40];
        for j = 1:size(colsProcess,2)
            normSeq(:,colsProcess(j)) = 0;
        end

        % y axis
        colsProcess = [26 29 32 35 38 41];
        for j = 1:size(colsProcess,2)
            normSeq(:,colsProcess(j)) = 0;
        end
        
        % z axis
        colsProcess = [1+2 4+2 7+2 10+2 13+2 16+2 19+2 22+2 25+2 28+2 31+2 34+2 37+2 40+2 43+2 46+2 49+2 52+2 55+2 58+2 61+2 ...
                       64+2 67+2 70+2 73+2 76+2 79+2 82+2 85+2 88+2 91+2 94+2 97+2 100+2 103+2 106+2 109+2 112+2 115+2 ...
                       118+2 121+2 124+2 127+2 130+2 133+2 136+2 139+2 142+2 145+2 148+2 151+2 154+2 157+2 160+2 ...
                       163+2 166+2 169+2 172+2 175+2 178+2];
        for j = 1:size(colsProcess,2)
            normSeq(:,colsProcess(j)) = 0;
        end
    
        seq = normSeq;

    end

    if seqNormalCurr(1,4) == 1
        % (6) put the "at rest" frame at the beginning and end of the seq
        seq = MSASLAtRest(seq);
    end
    
%     if seqNormalCurr(1,5) == 1 % simplify
%         reach = TrajReach(seq); % get traj reach 
%         seq = TrajSimp(seq,reach * 0.05);
%     end

end